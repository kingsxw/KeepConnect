# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    env:
      APP_VERSION: '0.9.9' # 默认值
    strategy:
      matrix:
        rid: [win-x86, win-x64]
        self_contained: [true, false]
        exclude:
          - rid: win-x86
            self_contained: false

    steps:
    - uses: actions/checkout@v4

    - name: Generate Semantic Version
      run: |
        $date = Get-Date -Format "yyyy.MM.dd"
        $commitHash = $env:GITHUB_SHA.Substring(0,7)
        $version = "${date}-${commitHash}"
        echo "APP_VERSION=$version" >> $env:GITHUB_ENV
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Build & Publish
      run: |
        dotnet publish -c Release `
          -r "${{ matrix.rid }}" `
          --self-contained "${{ matrix.self_contained }}" `
          -p:PublishSingleFile=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:Version=${{ env.APP_VERSION }} `
          -o "./publish/${{ matrix.rid }}/${{ matrix.self_contained }}"

    - name: Install 7-Zip
      run: choco install 7zip -y
  
    - name: Zip Artifacts
      run: |
        $version = (dotnet list package | Select-String '> (\d+\.\d+\.\d+)').Matches.Groups[1].Value
        cd publish
        Get-ChildItem -Directory | ForEach-Object {
          $arch = $_.Name
          $type = if ($_.GetDirectories().Name -eq "true") { "self-contained" } else { "framework-dependent" }
          7z a "../artifacts/$arch-$type-v${{ env.APP_VERSION }}.zip" "$($_.FullName)\*"
        }

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-packages
        path: ./artifacts/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-packages
        path: ./artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          Multi-architecture build includes:
          - Windows x86 (32-bit) Self-Contained
          - Windows x64 (64-bit) Self-Contained
          - Windows x64 Framework-Dependent
        draft: false
        prerelease: false
        files: |
          artifacts/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
